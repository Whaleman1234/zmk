/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <rgb_fx.dtsi>
#include <dt-bindings/zmk/rgb_fx.h>

#include <layouts/foostan/corne/5column.dtsi>
#include <layouts/foostan/corne/6column.dtsi>

&foostan_corne_6col_layout {
    transform = <&default_transform>;
};

&foostan_corne_5col_layout {
    transform = <&five_column_transform>;
};

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &foostan_corne_6col_layout;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |
//                      | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
// | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  |
// | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 |
//               | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };
    rgb_fx {
        compatible = "zmk,rgb-fx";
        drivers = <&led_strip>;
        chain-lengths = <54>;  // Or 27 if mirrored

        key-pixels = <>;
        //0 1 2 3 4 5       Left top row keys -> pixels 0-5
        //6 7 8 9 10 11     Left middle row
        //12 13 14 15 16 17  Left bottom row
        //18 19 20          Left thumbs
        //21 22 23 24 25 26  Right top row
        //27 28 29 30 31 32  Right middle
        //33 34 35 36 37 38  Right bottom
        //39 40 41          Right thumbs

        pixels 
            = <&pixel 0 0>
            , <&pixel 10 0> 
            , <&pixel 20 0>
            ;  // ... continue for all LEDs

        root_animation: animation_100 {
            compatible = "zmk,rgb-fx-compose";
            status = "okay";

            fx = <
                &main_animations
                &bt_indicator_1
			>;
		};

		main_animations: animation_0 {
			compatible = "zmk,rgb-fx-control-group";
			status = "okay";

			fx = <
				&blue_sparkle
				&white_sparkle
				&red_sparkle
				&bootloader_all
				&bootloader_status
				&bt_indicators
				&layer_indicator
				&all_indicators
				&blue_solid
				&red_solid
				&white_solid
				&wpm_indicator
				&basic_gradient
				&rgb_static_gradient
				&hsl_static_gradient
				&rgb_gradient
				&wpm_compose
				&rainbow
                &heatmap_effect
			>;
		};

		blue_sparkle: animation_1 {
			compatible = "zmk,rgb-fx-sparkle";
			status = "okay";

			pixels = <ZONE_STRIP>;
			duration = <10>;
			colors = <
				HSL(172, 70, 50)
				HSL(189, 70, 50)
			>;
		};

		white_sparkle: animation_2 {
			compatible = "zmk,rgb-fx-sparkle";
			status = "okay";

			pixels = <ZONE_STRIP>;
			duration = <10>;
			colors = <HSL(0, 50, 100)>;
		};

		red_sparkle: animation_3 {
			compatible = "zmk,rgb-fx-sparkle";
			status = "okay";

			pixels = <ZONE_STRIP>;
			duration = <10>;
			colors = <
				HSL(355, 70, 55)
				HSL(10, 70, 55)
			>;
		};

		bootloader_all: animation_4 {
			compatible = "zmk,rgb-fx-compose";
			status = "okay";

			fx = <&bootloader_write &bootloader_status>;
		};

		bootloader_status: animation_5 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <ZONE_INDICATOR_L1>;
			colors = <HSL(120, 100, 55)>;
		};

		bootloader_write: animation_6 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <ZONE_INDICATOR_L1_BG>;
			colors = <HSL(176, 100, 55)>;
		};

		bt_indicators: animation_7 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <ZONE_INDICATOR_L1 ZONE_INDICATOR_L2 ZONE_INDICATOR_L3>;
			colors = <HSL(197, 100, 60)>;
		};

		layer_indicator: animation_8 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <ZONE_INDICATOR_R1>;
			colors = <HSL(355, 100, 60)>;
		};

		indicator_bg: animation_9 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <ZONE_INDICATOR_L3_BG ZONE_INDICATOR_R1_BG>;
			colors = <HSL(0, 0, 0)>;
		};

		all_indicators: animation_10 {
			compatible = "zmk,rgb-fx-compose";
			status = "okay";

			fx = <
				&white_sparkle
				&indicator_bg
				&bt_indicators
				&layer_indicator
			>;
		};

		blue_solid: animation_11 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24>;
			colors = <HSL(187, 100, 59)>;
		};

		red_solid: animation_12 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24>;
			colors = <HSL(354, 100, 59)>;
		};

		white_solid: animation_13 {
			compatible = "zmk,rgb-fx-solid";
			status = "okay";

			pixels = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24>;
			colors = <HSL(0, 0, 100)>;
		};

		wpm_indicator: animation_14 {
			compatible = "zmk,rgb-fx-wpm";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(348, 95, 62) HSL(288, 95, 66)>;
			bounds = <0 238>;
			max-wpm = <100>;
			edge-gradient-width = <50>;
		};

		basic_gradient: animation_15 {
			compatible = "zmk,rgb-fx-linear-gradient";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(0, 100, 50) HSL(120, 100, 50) HSL(240, 100, 50)>;
			gradient-width = <255>;
			duration = <10>;
		};

		rgb_static_gradient: animation_16 {
			compatible = "zmk,rgb-fx-linear-gradient";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(232, 35, 25) HSL(94, 93, 71)>;
			use-rgb-interpolation;
		};

		hsl_static_gradient: animation_17 {
			compatible = "zmk,rgb-fx-linear-gradient";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(232, 35, 25) HSL(94, 93, 71)>;
		};

		rgb_gradient: animation_18 {
			compatible = "zmk,rgb-fx-linear-gradient";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(180, 100, 71) HSL(305, 100, 65)>;
			gradient-width = <150>;
			duration = <10>;
			use-rgb-interpolation;
		};

		bt_indicator_1: animation_19 {
			compatible = "zmk,rgb-fx-bt-indicator";
			status = "okay";

			pixels = <ZONE_INDICATOR_L1>;
			backdrop-pixels = <ZONE_INDICATOR_L1_BG>;

			color = <HSL(209, 100, 49)>;
			// backdrop-color = <HSL(1, 0, 0)>;

			profile-index = <0>;
		};

		wpm_left: animation_20 {
			compatible = "zmk,rgb-fx-wpm";
			status = "okay";

			pixels = <ZONE_STRIP_LEFT ZONE_STRIP_CENTER>;
			colors = <HSL(205, 100, 60) HSL(320, 100, 50)>;
			bounds = <84 0>;
			max-wpm = <100>;
			blending-mode = "multiply";
			edge-gradient-width = <30>;
		};

		wpm_right: animation_21 {
			compatible = "zmk,rgb-fx-wpm";
			status = "okay";

			pixels = <ZONE_STRIP_RIGHT>;
			colors = <HSL(205, 100, 60) HSL(320, 100, 50)>;
			bounds = <154 238>;
			max-wpm = <100>;
			blending-mode = "multiply";
			edge-gradient-width = <30>;
		};

		wpm_compose: animation_22 {
			compatible = "zmk,rgb-fx-compose";
			status = "okay";

			fx = <&white_sparkle &wpm_left &wpm_right>;
		};

		rainbow_border: animation_23 {
			compatible = "zmk,rgb-fx-static";
			status = "okay";

			pixels = <ZONE_RAINBOW_BORDER>;
			colors = <
				HSL(0, 0, 100) HSL(0, 0, 67) HSL(0, 0, 50)
				HSL(0, 0, 50) HSL(0, 0, 67) HSL(0, 0, 100)
			>;
			blending-mode = "multiply";
		};

		rainbow_colors: animation_24 {
			compatible = "zmk,rgb-fx-static";
			status = "okay";

			pixels = <ZONE_RAINBOW>;
			colors = <
				HSL(356, 94, 59) HSL(356, 94, 59)
				HSL(28, 100, 59) HSL(28, 100, 59)
				HSL(53, 100, 64) HSL(53, 100, 64)
				HSL(87, 58, 57) HSL(87, 58, 57)
				HSL(201, 85, 48) HSL(201, 85, 48)
				HSL(275, 63, 51) HSL(275, 63, 51)
			>;
		};

		rainbow_background: animation_25 {
			compatible = "zmk,rgb-fx-linear-gradient";
			status = "okay";

			pixels = <ZONE_STRIP>;
			colors = <HSL(220, 20, 30) HSL(223, 30, 80)>;
			gradient-width = <90>;
			duration = <8>;
		};

		rainbow: animation_26 {
			compatible = "zmk,rgb-fx-compose";
			status = "okay";

			fx = <&rainbow_background &rainbow_border &rainbow_colors>;
		};

        heatmap_effect: animation_27 {
            compatible = "zmk,rgb-fx-heatmap";
            status = "okay";

            pixels = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            color-cold-hue = <240>;  // Blue for unused keys
            color-hot-hue = <0>;     // Red for most-used keys
            saturation = <100>;
            lightness = <50>;
            blending-mode = "normal";
        };
	};
};


&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};
